CREATE DATABASE sql_training;

USE sql_training;

-- Question 1 and 2
CREATE TABLE CUX_OM_CUSTOMERS_46319 (
  CUSTOMER_ID        BIGINT			NOT NULL,
  CUSTOMER_NUMBER    VARCHAR(30)	NOT NULL,
  CUSTOMER_NAME      VARCHAR(100)	NOT NULL,
  TELEPHONE          VARCHAR(50),
  START_DATE_ACTIVE  DATE,
  END_DATE_ACTIVE    DATE,
  CREATED_BY         BIGINT			NOT NULL,
  CREATION_DATE      DATE			NOT NULL,
  LAST_UPDATED_BY    BIGINT			NOT NULL,
  LAST_UPDATE_DATE   DATE			NOT NULL,
  LAST_UPDATE_LOGIN  BIGINT
);

CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_46319_U1
ON CUX_OM_CUSTOMERS_46319 (CUSTOMER_ID);
CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_46319_U2
ON CUX_OM_CUSTOMERS_46319 (CUSTOMER_NUMBER);
CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_46319_U3
ON CUX_OM_CUSTOMERS_46319 (CUSTOMER_NAME);

CREATE TABLE CUX_OM_ITEMS_46319 (
  ITEM_ID          BIGINT		NOT NULL,
  ITEM_NUMBER      VARCHAR(30)	NOT NULL,
  ITEM_NAME        VARCHAR(100)	NOT NULL,
  UOM_CODE         VARCHAR(25)	NOT NULL,
  START_DATE_ACTIVE DATE, 
  END_DATE_ACTIVE   DATE, 
  CREATED_BY       BIGINT		NOT NULL,
  CREATION_DATE    DATE			NOT NULL,
  LAST_UPDATED_BY  BIGINT		NOT NULL,
  LAST_UPDATE_DATE DATE			NOT NULL,
  LAST_UPDATE_LOGIN BIGINT 
);


CREATE UNIQUE INDEX CUX_OM_ITEMS_46319_U1
ON CUX_OM_ITEMS_46319 (ITEM_ID);
CREATE UNIQUE INDEX CUX_OM_ITEMS_46319_U2
ON CUX_OM_ITEMS_46319 (ITEM_NUMBER);

CREATE TABLE CUX_OM_HEADERS_46319 (
  HEADER_ID BIGINT NOT NULL,
  ORG_ID BIGINT,
  ORDER_NUMBER VARCHAR(30) NOT NULL,
  CUSTOMER_ID BIGINT,
  ORDER_DATE DATE NOT NULL,
  ORDER_STATUS VARCHAR(30),
  DESCRIPTION VARCHAR(240),
  CREATED_BY BIGINT NOT NULL,
  CREATION_DATE DATE NOT NULL,
  LAST_UPDATED_BY BIGINT NOT NULL,
  LAST_UPDATE_DATE DATE NOT NULL,
  LAST_UPDATE_LOGIN BIGINT,
  ATTRIBUTE_CATEGORY VARCHAR(30),
  ATTRIBUTE1 VARCHAR(150),
  ATTRIBUTE2 VARCHAR(150),
  ATTRIBUTE3 VARCHAR(150),
  ATTRIBUTE4 VARCHAR(150),
  ATTRIBUTE5 VARCHAR(150),
  ATTRIBUTE6 VARCHAR(150),
  ATTRIBUTE7 VARCHAR(150),
  ATTRIBUTE8 VARCHAR(150),
  ATTRIBUTE9 VARCHAR(150),
  ATTRIBUTE10 VARCHAR(150),
  ATTRIBUTE11 VARCHAR(150),
  ATTRIBUTE12 VARCHAR(150),
  ATTRIBUTE13 VARCHAR(150),
  ATTRIBUTE14 VARCHAR(150),
  ATTRIBUTE15 VARCHAR(150)
);

CREATE UNIQUE INDEX CUX_OM_HEADERS_46319_U1
ON CUX_OM_HEADERS_46319 (HEADER_ID);
CREATE UNIQUE INDEX CUX_OM_HEADERS_46319_U2
ON CUX_OM_HEADERS_46319 (ORDER_NUMBER);
CREATE INDEX CUX_OM_HEADERS_46319_N1
ON CUX_OM_HEADERS_46319 (CUSTOMER_ID);


CREATE TABLE CUX_OM_LINES_46319 (
  LINE_ID BIGINT NOT NULL,
  HEADER_ID BIGINT NOT NULL,
  LINE_NUMBER VARCHAR(30) NOT NULL,
  CUSTOMER_ID BIGINT,
  ITEM_ID BIGINT NOT NULL,
  UNIT_PRICE DECIMAL(10,2),
  QUANTITY DECIMAL(10,2),
  DESCRIPTION VARCHAR(240),
  ADDITION1 VARCHAR(150),
  ADDITION2 VARCHAR(150),
  ADDITION3 VARCHAR(150),
  ADDITION4 VARCHAR(150),
  ADDITION5 VARCHAR(150),
  CREATED_BY BIGINT NOT NULL,
  CREATION_DATE DATE NOT NULL,
  LAST_UPDATED_BY BIGINT NOT NULL,
  LAST_UPDATE_DATE DATE NOT NULL,
  LAST_UPDATE_LOGIN BIGINT,
  ATTRIBUTE_CATEGORY VARCHAR(30),
  ATTRIBUTE1 VARCHAR(150),
  ATTRIBUTE2 VARCHAR(150),
  ATTRIBUTE3 VARCHAR(150),
  ATTRIBUTE4 VARCHAR(150),
  ATTRIBUTE5 VARCHAR(150),
  ATTRIBUTE6 VARCHAR(150),
  ATTRIBUTE7 VARCHAR(150),
  ATTRIBUTE8 VARCHAR(150),
  ATTRIBUTE9 VARCHAR(150),
  ATTRIBUTE10 VARCHAR(150),
  ATTRIBUTE11 VARCHAR(150),
  ATTRIBUTE12 VARCHAR(150),
  ATTRIBUTE13 VARCHAR(150),
  ATTRIBUTE14 VARCHAR(150),
  ATTRIBUTE15 VARCHAR(150)
);

CREATE UNIQUE INDEX CUX_OM_LINES_46319_U1
ON CUX_OM_LINES_46319 (LINE_ID);
CREATE INDEX CUX_OM_LINES_46319_N1
ON CUX_OM_LINES_46319 (HEADER_ID);
CREATE INDEX CUX_OM_LINES_46319_N2
ON CUX_OM_LINES_46319 (ITEM_ID);


-- Question 3
CREATE VIEW CUX_OM_HEADERS_V AS
SELECT 
h.HEADER_ID, h.ORDER_NUMBER, h.CUSTOMER_ID, h.ORDER_DATE, h.ORDER_STATUS, h.DESCRIPTION,
h.CREATED_BY, h.CREATION_DATE, h.LAST_UPDATED_BY, h.LAST_UPDATE_DATE, h.LAST_UPDATE_LOGIN,
h.ATTRIBUTE_CATEGORY, h.ATTRIBUTE1, h.ATTRIBUTE2, h.ATTRIBUTE3, h.ATTRIBUTE4, h.ATTRIBUTE5,
h.ATTRIBUTE6, h.ATTRIBUTE7, h.ATTRIBUTE8, h.ATTRIBUTE9, h.ATTRIBUTE10, h.ATTRIBUTE11,
h.ATTRIBUTE12, h.ATTRIBUTE13, h.ATTRIBUTE14, h.ATTRIBUTE15, c.CUSTOMER_NUMBER,
c.CUSTOMER_NAME, c.TELEPHONE
FROM cux_om_headers_46319 h
INNER JOIN cux_om_customers_46319 c ON h.CUSTOMER_ID = c.CUSTOMER_ID;
  
SELECT * FROM CUX_OM_HEADERS_V;


-- QUESTION 4
SELECT 
h.ORDER_NUMBER, c.CUSTOMER_NUMBER, c.CUSTOMER_NAME, h.ORDER_DATE, h.ORDER_STATUS, h.DESCRIPTION
FROM cux_om_headers_46319 h 
INNER JOIN cux_om_customers_46319 c ON h.CUSTOMER_ID = c.CUSTOMER_ID
ORDER BY c.CUSTOMER_NUMBER ASC, h.ORDER_NUMBER ASC;

-- QUESTION 5
SELECT
h.ORDER_NUMBER, c.CUSTOMER_NAME, h.ORDER_DATE, h.ORDER_STATUS, l.LINE_NUMBER, i.ITEM_NUMBER, i.ITEM_NAME
FROM cux_om_headers_46319 h
INNER JOIN cux_om_customers_46319 c ON h.CUSTOMER_ID = c.CUSTOMER_ID
INNER JOIN cux_om_lines_46319 l ON h.HEADER_ID = l.HEADER_ID
INNER JOIN cux_om_items_46319 i ON l.ITEM_ID = i.ITEM_ID
ORDER BY h.ORDER_NUMBER ASC, l.LINE_NUMBER ASC;

-- QUESTION 6
SELECT
c.CUSTOMER_NUMBER, c.CUSTOMER_NAME, i.ITEM_NUMBER, i.ITEM_NAME, i.UOM_CODE
FROM cux_om_customers_46319 c
INNER JOIN cux_om_headers_46319 h ON c.CUSTOMER_ID = h.CUSTOMER_ID
INNER JOIN cux_om_lines_46319 l ON h.HEADER_ID = l.HEADER_ID
INNER JOIN cux_om_items_46319 i ON l.ITEM_ID = i.ITEM_ID
WHERE c.CUSTOMER_NUMBER LIKE '1101';

-- QUESTION 7
SELECT
i.ITEM_NUMBER, i.ITEM_NAME, AVG(l.UNIT_PRICE) AS AVERAGE_UNIT_PRICE, 
MAX(l.UNIT_PRICE) AS HIGHEST_UNIT_PRICE, MIN(l.UNIT_PRICE) AS LOWEST_UNIT_PRICE
FROM cux_om_lines_46319 l
INNER JOIN cux_om_headers_46319 h ON l.HEADER_ID = h.HEADER_ID
INNER JOIN cux_om_items_46319 i ON l.ITEM_ID = i.ITEM_ID
WHERE h.ORDER_STATUS NOT LIKE 'CANCELLED'
GROUP BY i.ITEM_NUMBER, i.ITEM_NAME;

-- QUESTION 8
SELECT 
c.CUSTOMER_NUMBER, c.CUSTOMER_NAME, c.TELEPHONE, c.START_DATE_ACTIVE, c.END_DATE_ACTIVE
FROM cux_om_headers_46319 h
INNER JOIN cux_om_customers_46319 c ON h.CUSTOMER_ID = c.CUSTOMER_ID
WHERE h.ORDER_STATUS LIKE 'CANCELLED';


-- QUESTION 9
SELECT
SUM(l.UNIT_PRICE * l.QUANTITY) AS Total_Sales
FROM cux_om_headers_46319 h
INNER JOIN cux_om_lines_46319 l ON h.HEADER_ID = l.HEADER_ID
WHERE YEAR(h.ORDER_DATE) LIKE '2015'
AND h.ORDER_STATUS NOT LIKE 'CANCELLED';

-- QUESTION 10
CREATE INDEX cux_om_items_46319_N1 ON cux_om_items_46319 (ITEM_NAME); 

