-- The name of the database I use -- 
USE tutorial2manual;
-- To create CUX_OM_CUSTOMERS_46322 table --
CREATE TABLE CUX_OM_CUSTOMERS_46322(CUSTOMER_ID bigint NOT NULL, 
CUSTOMER_NUMBER varchar(30) NOT NULL,
CUSTOMER_NAME varchar(100) NOT NULL,
TELEPHONE varchar(50),
START_DATE_ACTIVE date,
END_DATE_ACTIVE date,
CREATED_BY bigint NOT NULL,
CREATION_DATE date NOT NULL,
LAST_UPDATED_BY bigint NOT NULL,
LAST_UPDATE_DATE date NOT NULL,
LAST_UPDATE bigint);
-- To check whether the table is available or not --
SHOW tables;
-- To create indexes on CUX_OM_CUSTOMERS_46322 table*
CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_46322_U1 ON CUX_OM_CUSTOMERS_46322(CUSTOMER_ID);
CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_46322_U2 ON CUX_OM_CUSTOMERS_46322(CUSTOMER_NUMBER);
CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_46322_U3 ON CUX_OM_CUSTOMERS_46322(CUSTOMER_NAME);
-- To add primary key besides input it when creating a table --
ALTER TABLE CUX_OM_CUSTOMERS_46322 ADD PRIMARY KEY (CUSTOMER_ID);
-- To create another table named as CUX_OM_LINES_46322 --
CREATE TABLE CUX_OM_LINES_46322(LINE_ID bigint NOT NULL, 
HEADER_ID bigint NOT NULL,
LINE_NUMBER varchar(30) NOT NULL,
ITEM_ID bigint NOT NULL,
UNIT_PRICE decimal(10,2),
QUANTITY decimal(10,2),
DESCRIPTION varchar(240),
ADDITION1 varchar(150),
ADDITION2 varchar(150),
ADDITION3 varchar(150),
ADDITION4 varchar(150),
ADDITION5 varchar(150),
CREATED_BY bigint NOT NULL,
CREATION_DATE date NOT NULL,
LAST_UPDATED_BY bigint NOT NULL,
LAST_UPDATE_DATE date NOT NULL,
LAST_UPDATE_LOGIN bigint,
ATTRIBUTE_CATEGORY varchar(30),
ATTRIBUTE1 varchar(150),
ATTRIBUTE2 varchar(150),
ATTRIBUTE3 varchar(150),
ATTRIBUTE4 varchar(150),
ATTRIBUTE5 varchar(150),
ATTRIBUTE6 varchar(150),
ATTRIBUTE7 varchar(150),
ATTRIBUTE8 varchar(150),
ATTRIBUTE9 varchar(150),
ATTRIBUTE10 varchar(150),
ATTRIBUTE11 varchar(150),
ATTRIBUTE12 varchar(150),
ATTRIBUTE13 varchar(150),
ATTRIBUTE14 varchar(150),
ATTRIBUTE15 varchar(150),
PRIMARY KEY(HEADER_ID)
);
CREATE UNIQUE INDEX CUX_OM_LINES_46322_U1 ON CUX_OM_LINES_46322(LINE_ID);
CREATE INDEX CUX_OM_LINES_46322_N1 ON CUX_OM_LINES_46322(HEADER_ID);
CREATE INDEX CUX_OM_LINES_46322_N2 ON CUX_OM_LINES_46322(ITEM_ID);
SHOW tables;
-- To create another table named as CUX_OM_ITEMS_46322 --
CREATE TABLE CUX_OM_ITEMS_46322(ITEM_ID bigint NOT NULL, 
ITEM_NUMBER varchar(30) NOT NULL,
ITEM_NAME varchar(100) NOT NULL,
UOM_CODE varchar(25),
START_DATE_ACTIVE date,
END_DATE_ACTIVE date,
CREATED_BY bigint NOT NULL,
CREATION_DATE date NOT NULL,
LAST_UPDATE_BY bigint NOT NULL,
LAST_UPDATE_DATE date NOT NULL,
LAST_UPDATE_LOGIN bigint);
CREATE UNIQUE INDEX CUX_OM_ITEMS_46322_U1 ON CUX_OM_ITEMS_46322(ITEM_ID);
CREATE UNIQUE INDEX CUX_OM_ITEMS_46322_U2 ON CUX_OM_ITEMS_46322(ITEM_NUMBER);
ALTER TABLE CUX_OM_ITEMS_46322 ADD PRIMARY KEY (ITEM_ID);

-- To create another table named as CUX_OM_ITEMS_46322 --
CREATE TABLE CUX_OM_HEADERS_46322(HEADER_ID bigint NOT NULL, 
ORG_ID bigint,
ORDER_NUMBER varchar(30) NOT NULL,
CUSTOMER_ID bigint,
ORDER_DATE date NOT NULL,
ORDER_STATUS varchar(30),
DESCRIPTION varchar(240),
CREATED_BY bigint NOT NULL,
CREATION_DATE date NOT NULL,
LAST_UPDATED_BY bigint NOT NULL,
LAST_UPDATE_DATE date NOT NULL,
LAST_UPDATE_LOGIN bigint,
ATTRIBUTE_CATEGORY varchar(30),
ATTRIBUTE1 varchar(150),
ATTRIBUTE2 varchar(150),
ATTRIBUTE3 varchar(150),
ATTRIBUTE4 varchar(150),
ATTRIBUTE5 varchar(150),
ATTRIBUTE6 varchar(150),
ATTRIBUTE7 varchar(150),
ATTRIBUTE8 varchar(150),
ATTRIBUTE9 varchar(150),
ATTRIBUTE10 varchar(150),
ATTRIBUTE11 varchar(150),
ATTRIBUTE12 varchar(150),
ATTRIBUTE13 varchar(150),
ATTRIBUTE14 varchar(150),
ATTRIBUTE15 varchar(150));
ALTER TABLE CUX_OM_HEADERS_46322 ADD PRIMARY KEY (HEADER_ID);
CREATE UNIQUE INDEX CUX_OM_HEADERS_46322_U1 ON CUX_OM_HEADERS_46322(HEADER_ID);
CREATE UNIQUE INDEX CUX_OM_HEADERS_46322_U2 ON CUX_OM_HEADERS_46322(ORDER_NUMBER);
CREATE INDEX CUX_OM_HEADERS_46322_N1 ON CUX_OM_HEADERS_46322(CUSTOMER_ID);

DROP VIEW CUX_OM_HEADERS_V;

CREATE VIEW CUX_OM_HEADERS_V AS SELECT CUX_OM_HEADERS_46322.HEADER_ID, CUX_OM_HEADERS_46322.ORDER_NUMBER, CUX_OM_HEADERS_46322.CUSTOMER_ID, CUX_OM_HEADERS_46322.ORDER_DATE,
CUX_OM_HEADERS_46322.ORDER_STATUS, CUX_OM_HEADERS_46322.DESCRIPTION, CUX_OM_HEADERS_46322.CREATED_BY, CUX_OM_HEADERS_46322.CREATION_DATE, CUX_OM_HEADERS_46322.LAST_UPDATED_BY,
CUX_OM_HEADERS_46322.LAST_UPDATE_DATE, CUX_OM_HEADERS_46322.LAST_UPDATE_LOGIN, CUX_OM_HEADERS_46322.ATTRIBUTE_CATEGORY, CUX_OM_HEADERS_46322.ATTRIBUTE1,
CUX_OM_HEADERS_46322.ATTRIBUTE2, CUX_OM_HEADERS_46322.ATTRIBUTE3, CUX_OM_HEADERS_46322.ATTRIBUTE4, CUX_OM_HEADERS_46322.ATTRIBUTE5, CUX_OM_HEADERS_46322.ATTRIBUTE6,
CUX_OM_HEADERS_46322.ATTRIBUTE7, CUX_OM_HEADERS_46322.ATTRIBUTE8, CUX_OM_HEADERS_46322.ATTRIBUTE9, CUX_OM_HEADERS_46322.ATTRIBUTE10, CUX_OM_HEADERS_46322.ATTRIBUTE11, CUX_OM_HEADERS_46322.ATTRIBUTE12,
CUX_OM_HEADERS_46322.ATTRIBUTE13, CUX_OM_HEADERS_46322.ATTRIBUTE14, CUX_OM_HEADERS_46322.ATTRIBUTE15, CUX_OM_CUSTOMERS_46322.CUSTOMER_NUMBER, CUX_OM_CUSTOMERS_46322.CUSTOMER_NAME, CUX_OM_CUSTOMERS_46322.TELEPHONE
FROM CUX_OM_HEADERS_46322
LEFT  JOIN CUX_OM_CUSTOMERS_46322 ON CUX_OM_CUSTOMERS_46322.CUSTOMER_ID = CUX_OM_HEADERS_46322.CUSTOMER_ID;

SELECT CUX_OM_HEADERS_46322.ORDER_NUMBER, CUX_OM_CUSTOMERS_46322.CUSTOMER_NUMBER, CUX_OM_CUSTOMERS_46322.CUSTOMER_NAME,
CUX_OM_HEADERS_46322.ORDER_DATE, CUX_OM_HEADERS_46322.ORDER_STATUS, CUX_OM_HEADERS_46322.DESCRIPTION
FROM CUX_OM_CUSTOMERS_46322 CROSS JOIN CUX_OM_HEADERS_46322 ORDER BY CUSTOMER_NUMBER ASC, ORDER_NUMBER ASC;

SELECT CUX_OM_HEADERS_46322.ORDER_NUMBER, CUX_OM_CUSTOMERS_46322.CUSTOMER_NAME,
CUX_OM_HEADERS_46322.ORDER_DATE, CUX_OM_HEADERS_46322.ORDER_STATUS, CUX_OM_LINES_46322.LINE_NUMBER, CUX_OM_ITEMS_46322.ITEM_NUMBER,
CUX_OM_ITEMS_46322.ITEM_NAME FROM CUX_OM_CUSTOMERS_46322 CROSS JOIN CUX_OM_HEADERS_46322, CUX_OM_LINES_46322, 
CUX_OM_ITEMS_46322 ORDER BY CUX_OM_HEADERS_46322.ORDER_NUMBER ASC, CUX_OM_LINES_46322.LINE_NUMBER ASC;

SELECT CUX_OM_CUSTOMERS_46322.CUSTOMER_NUMBER, CUX_OM_CUSTOMERS_46322.CUSTOMER_NAME, 
CUX_OM_ITEMS_46322.ITEM_NUMBER, CUX_OM_ITEMS_46322.ITEM_NAME, CUX_OM_ITEMS_46322.UOM_CODE
FROM CUX_OM_CUSTOMERS_46322 CROSS JOIN CUX_OM_ITEMS_46322 WHERE CUX_OM_CUSTOMERS_46322.CUSTOMER_NUMBER = '1101'AND CUX_OM_ITEMS_46322.ITEM_NUMBER = 'SB86662';

SELECT CUX_OM_ITEMS_46322.ITEM_NUMBER, CUX_OM_ITEMS_46322.ITEM_NAME, AVG(CUX_OM_LINES_46322.UNIT_PRICE),
MAX(CUX_OM_LINES_46322.UNIT_PRICE), MIN(CUX_OM_LINES_46322.UNIT_PRICE) 
FROM CUX_OM_ITEMS_46322 
INNER JOIN CUX_OM_LINES_46322 ON CUX_OM_ITEMS_46322.ITEM_ID  = CUX_OM_LINES_46322.ITEM_ID
INNER JOIN CUX_OM_HEADERS_46322 ON CUX_OM_LINES_46322.HEADER_ID = CUX_OM_HEADERS_46322.HEADER_ID
WHERE CUX_OM_HEADERS_46322.ORDER_STATUS != 'CANCELLED' 
GROUP BY CUX_OM_ITEMS_46322.ITEM_NUMBER, CUX_OM_ITEMS_46322.ITEM_NAME;

SELECT CUX_OM_CUSTOMERS_46322.CUSTOMER_NUMBER, CUX_OM_CUSTOMERS_46322.CUSTOMER_NAME, CUX_OM_CUSTOMERS_46322.TELEPHONE,
CUX_OM_CUSTOMERS_46322.START_DATE_ACTIVE, CUX_OM_CUSTOMERS_46322.END_DATE_ACTIVE
FROM CUX_OM_CUSTOMERS_46322
LEFT JOIN CUX_OM_HEADERS_46322 ON CUX_OM_HEADERS_46322.CUSTOMER_ID = CUX_OM_CUSTOMERS_46322.CUSTOMER_ID
WHERE CUX_OM_HEADERS_46322.ORDER_STATUS = 'CANCELLED';

SELECT COUNT(CUX_OM_HEADERS_46322.ORDER_STATUS) AS 'Total Sales'
FROM CUX_OM_HEADERS_46322
WHERE CUX_OM_HEADERS_46322.ORDER_STATUS != 'CANCELLED';

CREATE UNIQUE INDEX CUX_OM_ITEMS_46322_U3 ON CUX_OM_ITEMS_46322(ITEM_NAME);
ALTER TABLE CUX_OM_ITEMS_46322 DROP INDEX CUX_OM_ITEMS_46322_U3;
CREATE INDEX CUX_OM_ITEMS_46322_U3 ON CUX_OM_ITEMS_46322(ITEM_NAME);

