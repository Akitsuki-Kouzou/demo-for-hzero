use db_customer;
SET @@sql_mode:='';

-- change date format
ALTER TABLE `CUX_OM_CUSTOMERS_45547` CHANGE COLUMN `date` `date` DATE;

-- customer table
CREATE TABLE CUX_OM_CUSTOMERS_45547 (
  CUSTOMER_ID BIGINT PRIMARY KEY,
  CUSTOMER_NUMBER VARCHAR(30) NOT NULL,
  CUSTOMER_NAME VARCHAR(100) NOT NULL,
  TELEPHONE VARCHAR(50),
  START_DATE_ACTIVE DATE,
  END_DATE_ACTIVE DATE,
  CREATED_BY BIGINT NOT NULL,
  CREATION_DATE DATE NOT NULL,
  LAST_UPDATED_BY BIGINT NOT NULL, 
  LAST_UPDATE_DATE DATE NOT NULL,
  LAST_UPDATE_LOGIN BIGINT
);

-- create customer index
CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_XXXX_U2
ON CUX_OM_CUSTOMERS_45547 (CUSTOMER_NUMBER);

CREATE UNIQUE INDEX CUX_OM_CUSTOMERS_XXXX_U3
ON CUX_OM_CUSTOMERS_45547 (CUSTOMER_NAME);

-- create item table
CREATE TABLE CUX_OM_ITEMS_45547 (
  ITEM_ID BIGINT PRIMARY KEY,
  ITEM_NUMBER VARCHAR(30) NOT NULL,
  ITEM_NAME VARCHAR(100) NOT NULL,
  UOM_CODE VARCHAR(25), 
  START_DATE_ACTIVE DATE,
  END_DATE_ACTIVE DATE,
  CREATED_BY BIGINT NOT NULL,
  CREATION_DATE DATE NOT NULL,
  LAST_UPDATED_BY BIGINT NOT NULL,
  LAST_UPDATE_DATE DATE NOT NULL,
  LAST_UPDATE_LOGIN BIGINT
);

-- create item index
CREATE UNIQUE INDEX CUX_OM_ITEMS_XXXX_U2
ON CUX_OM_ITEMS_45547 (ITEM_NUMBER);

-- create header table
CREATE TABLE CUX_OM_HEADERS_45547 (
  HEADER_ID BIGINT PRIMARY KEY,
  ORG_ID BIGINT DEFAULT 101,
  ORDER_NUMBER 	VARCHAR(30) NOT NULL,
  CUSTOMER_ID BIGINT,
  ORDER_DATE DATE NOT NULL,
  ORDER_STATUS VARCHAR(30),
  DESCRIPTION VARCHAR(240),
  CREATED_BY BIGINT NOT NULL,
  CREATION_DATE DATE NOT NULL,
  LAST_UPDATED_BY BIGINT NOT NULL,
  LAST_UPDATE_DATE DATE NOT NULL,
  LAST_UPDATE_LOGIN BIGINT,
  ATTRIBUTE_CATEGORY VARCHAR(30),
  ATTRIBUTE1 VARCHAR(150),
  ATTRIBUTE2 VARCHAR(150),
  ATTRIBUTE3 VARCHAR(150),
  ATTRIBUTE4 VARCHAR(150),
  ATTRIBUTE5 VARCHAR(150),
  ATTRIBUTE6 VARCHAR(150),
  ATTRIBUTE7 VARCHAR(150),
  ATTRIBUTE8 VARCHAR(150),
  ATTRIBUTE9 VARCHAR(150),
  ATTRIBUTE10 VARCHAR(150),
  ATTRIBUTE11 VARCHAR(150),
  ATTRIBUTE12 VARCHAR(150),
  ATTRIBUTE13 VARCHAR(150),
  ATTRIBUTE14 VARCHAR(150),
  ATTRIBUTE15 VARCHAR(150)
);

-- create header index
CREATE UNIQUE INDEX CUX_OM_HEADERS_XXXX_U2
ON CUX_OM_HEADERS_45547 (ORDER_NUMBER);

CREATE INDEX CUX_OM_HEADERS_XXXX_N1
ON CUX_OM_HEADERS_45547 (CUSTOMER_ID);

CREATE TABLE CUX_OM_LINES_45547 (
  LINE_ID BIGINT PRIMARY KEY,
  HEADER_ID BIGINT NOT NULL,
  LINE_NUMBER VARCHAR(30) NOT NULL,
  ITEM_ID BIGINT NOT NULL,
  UNIT_PRICE DECIMAL(10,2),
  QUANTITY DECIMAL(10,2),
  DESCRIPTION VARCHAR(240),
  ADDITION1 VARCHAR(150),
  ADDITION2 VARCHAR(150),
  ADDITION3 VARCHAR(150),
  ADDITION4 VARCHAR(150),
  ADDITION5 VARCHAR(150),
  CREATED_BY BIGINT NOT NULL,
  CREATION_DATE DATE NOT NULL,
  LAST_UPDATED_BY BIGINT NOT NULL,
  LAST_UPDATE_DATE DATE NOT NULL,
  LAST_UPDATE_LOGIN BIGINT,
  ATTRIBUTE_CATEGORY VARCHAR(30),
  ATTRIBUTE1 VARCHAR(150),
  ATTRIBUTE2 VARCHAR(150),
  ATTRIBUTE3 VARCHAR(150),
  ATTRIBUTE4 VARCHAR(150),
  ATTRIBUTE5 VARCHAR(150),
  ATTRIBUTE6 VARCHAR(150),
  ATTRIBUTE7 VARCHAR(150),
  ATTRIBUTE8 VARCHAR(150),
  ATTRIBUTE9 VARCHAR(150),
  ATTRIBUTE10 VARCHAR(150),
  ATTRIBUTE11 VARCHAR(150),
  ATTRIBUTE12 VARCHAR(150),
  ATTRIBUTE13 VARCHAR(150),
  ATTRIBUTE14 VARCHAR(150),
  ATTRIBUTE15 VARCHAR(150)
);

-- create list index
CREATE INDEX CUX_OM_LINES_XXXX_N1
ON CUX_OM_LINES_45547 (HEADER_ID);

CREATE INDEX CUX_OM_HEADERS_XXXX_N1
ON CUX_OM_LINES_45547 (ITEM_ID);

-- drop table
DROP TABLE IF EXISTS CUX_OM_HEADERS_45547;

-- fetch data
SELECT * FROM CUX_OM_CUSTOMERS_45547;
SELECT * FROM CUX_OM_ITEMS_45547;
SELECT * FROM CUX_OM_HEADERS_45547;
SELECT * FROM CUX_OM_LINES_45547;

-- no3
CREATE VIEW CUX_OM_HEADERS_V AS
SELECT CUX_OM_HEADERS_45547.*,  
CUX_OM_CUSTOMERS_45547.CUSTOMER_NUMBER, 
CUX_OM_CUSTOMERS_45547.CUSTOMER_NAME, 
CUX_OM_CUSTOMERS_45547.TELEPHONE 
FROM  CUX_OM_HEADERS_45547
INNER JOIN CUX_OM_CUSTOMERS_45547 ON
CUX_OM_HEADERS_45547.CUSTOMER_ID = CUX_OM_CUSTOMERS_45547.CUSTOMER_ID;

-- no4  
SELECT ORDER_NUMBER, CUSTOMER_NUMBER, CUSTOMER_NAME, ORDER_DATE, ORDER_STATUS, DESCRIPTION
FROM CUX_OM_CUSTOMERS_45547 INNER JOIN CUX_OM_HEADERS_45547 ON
CUX_OM_CUSTOMERS_45547.CUSTOMER_ID = CUX_OM_HEADERS_45547.CUSTOMER_ID
ORDER BY CUSTOMER_NUMBER AND ORDER_NUMBER ASC;

-- no5
SELECT ORDER_NUMBER, CUSTOMER_NAME, ORDER_DATE, ORDER_STATUS, LINE_NUMBER, ITEM_NUMBER, ITEM_NAME
FROM CUX_OM_CUSTOMERS_45547 
INNER JOIN CUX_OM_HEADERS_45547 ON
CUX_OM_CUSTOMERS_45547.CUSTOMER_ID = CUX_OM_HEADERS_45547.CUSTOMER_ID
INNER JOIN CUX_OM_LINES_45547 ON
CUX_OM_HEADERS_45547.HEADER_ID = CUX_OM_LINES_45547.HEADER_ID
INNER JOIN CUX_OM_ITEMS_45547 ON
CUX_OM_LINES_45547.ITEM_ID = CUX_OM_ITEMS_45547.ITEM_ID
ORDER BY ORDER_NUMBER AND LINE_NUMBER ASC;

-- no6
SELECT CUSTOMER_NUMBER, CUSTOMER_NAME, ITEM_NUMBER, ITEM_NAME, UOM_CODE
FROM CUX_OM_CUSTOMERS_45547 
INNER JOIN CUX_OM_HEADERS_45547 ON
CUX_OM_CUSTOMERS_45547.CUSTOMER_ID = CUX_OM_HEADERS_45547.CUSTOMER_ID
INNER JOIN CUX_OM_LINES_45547 ON
CUX_OM_HEADERS_45547.HEADER_ID = CUX_OM_LINES_45547.HEADER_ID
INNER JOIN CUX_OM_ITEMS_45547 ON
CUX_OM_LINES_45547.ITEM_ID = CUX_OM_ITEMS_45547.ITEM_ID;

-- no7
SELECT ITEM_NUMBER, ITEM_NAME, AVERAGE_UNIT_PRICE, HIGHEST_UNIT_PRICE, LOWEST_UNIT_PRICE from (
SELECT ITEM_NUMBER, ITEM_NAME, ORDER_STATUS,
AVG(UNIT_PRICE) AS AVERAGE_UNIT_PRICE,
MAX(UNIT_PRICE) AS HIGHEST_UNIT_PRICE,
MIN(UNIT_PRICE) AS LOWEST_UNIT_PRICE
FROM CUX_OM_ITEMS_45547
INNER JOIN CUX_OM_LINES_45547 ON
CUX_OM_ITEMS_45547.ITEM_ID = CUX_OM_LINES_45547.ITEM_ID
INNER JOIN CUX_OM_HEADERS_45547 ON
CUX_OM_LINES_45547.HEADER_ID = CUX_OM_HEADERS_45547.HEADER_ID
GROUP BY ITEM_NUMBER, ITEM_NAME, ORDER_STATUS
HAVING ORDER_STATUS != "CANCELLED") temp;

-- no8
SELECT CUSTOMER_NUMBER, CUSTOMER_NAME, TELEPHONE, START_DATE_ACTIVE, END_DATE_ACTIVE
FROM CUX_OM_CUSTOMERS_45547 INNER JOIN CUX_OM_HEADERS_45547 ON
CUX_OM_CUSTOMERS_45547.CUSTOMER_ID = CUX_OM_HEADERS_45547.CUSTOMER_ID
WHERE ORDER_STATUS = "CANCELLED";

-- no9
SELECT SUM(CUX_OM_LINES_45547.HEADER_ID * QUANTITY) AS TOTAL_SALES  
FROM CUX_OM_LINES_45547
INNER JOIN CUX_OM_HEADERS_45547 ON 
CUX_OM_LINES_45547.HEADER_ID = CUX_OM_HEADERS_45547.HEADER_ID
WHERE YEAR(ORDER_DATE) = "2015"
AND ORDER_STATUS != "CANCELLED";

-- no10
CREATE INDEX CUX_OM_ITEMS_XXXX_NO10 ON CUX_OM_ITEMS_45547 (ITEM_NAME);


